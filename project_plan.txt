

0.ROUGH OUTLINE PLAN

OVERALL OUTLINE PLAN
-1.Plan - high-level outline, brainstorming, and rough then detailed plan and timings
-2.Scope - UX (personas, user needs, user journeys) plus must/could/should/not this time
-3.Design - product - objects, tables, files, properties, methods, wireframe frontend
-4.Develop - db, objects, sinatra, html/css
-5.Present - generate and prepare - develop during process
-6.PDA - gather evidence - develop during

ROUGH EXPECTED INITIAL TIMINGS
-Aim to get working MVP up and running asap
-FRI - plan / scope / design
-SAT - plan / initial present and PDA, initial develop
-SUN - scope / present / develop
-MON - finish scope / design and develop
-TUE - develop
-WED - develop
-THU - final develop and complete presentation
-FRI - present


1.PLAN

TO DO
DONE-rough outline and timing
DONE-create git/github repo
DONE-complete homework form to submit link to repo
DONE-generate more detailed plan for each high level area
DONE-set up project management file - might just do in this file
-consider trello - moscow board? - goals (must have, should haves, could haves, not this time)
-consider trello - kanban board? - micro task management (to do, done etc)
-consider presentation - prezzi - mac version

GOALS
-get rough and then detailed plan
-consider all the possibilities for app
-aim to get prototype-MVP up and running asap
-aim to do presentation and PDA during process


2.SCOPE

TO DO
-more detailed scoping - review apps
-personas in presentation
-user needs in presentation
-user journeys in presentation
-consider what other activity might be required
-split design goals by MVP/extensions/etc - must/should/could haves etc

GOALS
-consider requirements and potential requirements
-detailed personas, user needs, user journeys
-try to do directly in presentation??
-cover MVP
-cover Extensions
-consider further capability - review apps - Monzo, MoneyDashboard, lots of mobile/online banking apps
-identify must/should/could/not this time

PERSONAS
-student needs to save, richer saving for something, XYZ something els
uses phone - mobile first
no controls on spending
student - spending limited
office worker - saving for something
spending limit
spending goal
versus income - need to be able to add positive amounts!!
repeat transactions??

USER NEEDS

USER JOURNEYS


3.DESIGN

TO DO
DONE-folder/file structure
-object diagrams
-table diagrams
-view wireframes??
-try to diagram directly in presentation??
-review folder/file structure for other objects

FOLDER/FILE STRUCTURE
DONE-controllers
DONE-controller.rb (main contoller at top level for now)
DONE-db
DONE---seeds.rb
DONE---sql_runner.rb
DONE---spending_tracker.sql
DONE-models
DONE---merchant
DONE---tag
DONE---transaction
DONE-public
DONE---style.css - may change later
DONE-specs
DONE-views
DONE---layout.erb

OBJECTS

-MERCHANT OBJECT (MVP)
Properties
DONE---id
DONE---name
Methods
DONE---initialize
DONE---reader(name,id)
DONE---CRUD (save, update, delete, self.all, self.delete_all, self.find(id))
---get transactions/tags
---self.delete(id)???

-TAG OBJECT (MVP)
Properties
DONE---id
DONE---name
Methods
DONE---initialize
DONE---reader(name,id)
DONE---CRUD (save, update, delete, self.all, self.delete_all, self.find(id))
---get transactions/merchants
---self.delete(id)???

-TRANSACTION OBJECT (MVP)
Properties
DONE---id
DONE---amount
TODO---date
DONE---merchant_id
DONE---tag_id
Methods
DONE---initialize
DONE---reader(id,amount,merchant_id,tag_id) - EXPOSE ALL FOR NOW
DONE---CRUD (save, update, delete, self.all, self.delete_all, self.find(id))
---get tags/merchants
---self.delete(id)???


SQL/TABLES

DONE-merchants table (MVP)
DONE---id
DONE---name

DONE-tags table (MVP)
DONE---id
DONE---name

DONE-transactions table (MVP)
DONE---id
DONE---amount
TODO---date
DONE---merchant_id
DONE---tag_id


VIEWS/DISPLAYS
-All transactions - amount, merchant, tag, overall total (MVP)
DONE-simple layout


4.DEVELOP

TO DO
DONE-set up folder/file structure
DONE-createdb spending_tracker
DONE-psql -d spending_tracker -f db/spending_tracker.sql
DONE-db sql-tables, runner for queries
DONE-amount to numeric
-add date to transaction
-seed file for testing
-specs for testing
-objects/models
-public/css/images
-controllers
-views

GOALS
-set up MVP asap
-identify and iteratively add functionality / styling


5.PRESENTATION

TO DO
DONE-rough outline presentation - see below
-choose (mac?) and set up presentation file
-try to do UX directly in presentation

GOALS
-Presentations Friday - 10 minutes to present + 5 minutes for questions
-Show your sketches, notes, diagrams, wireframes and user planning
-Demonstrate your app's functionality
-Talk about some code that you are particularly proud of
-Highlight your main learning points
-Do not talk through every single line of code or go over the time limit

OUTLINE PRESENTATION
-Plan
-Scope - UX
-Design - objects/models etc
-Demonstrate app
-Code highlights
-Learning points


6.PDA REQUIREMENTS

TO DO
-check requirements
